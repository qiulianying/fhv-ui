项目结构以及简介：
docs：用于更新到gitHub的打包内容，打包之后更新gitHub可以直接访问对应网址页面
examples：用于存放实例并作为文档展示，这里是进过额外处理命名，功能类似src文件
examples-assets：
layout：编写的对应全局方法
lib：用于更新
packages：用于存放组件相关代码
public：vue-cli3.0以上版本创建项目的构建产生的公共使用html，和vue-cli2.0相关版本位置不同，但是功能类似
public-index.html：有设置对应兼容下问题相关适配处理


项目样式处理：
CSS处理
REM处理
已使用rem适配方案
`remUnit: 100`
`document.documentElement.style.fontSize = window.innerWidth / 7.5 + 'px'` // 7.5对应UI图提供的750px尺寸
在css中只需要px单位，会自动除以一百转换成rem。 100px => 1rem


项目启动以及更新介绍
依赖安装以及启动
yarn install

组件打包以及上传方式方式
(1)npm依赖上传打包：
npm run lib
npm login
userName：qiulianying
password:
npm publish
(2)gitHub文档上传
npm run build
dist文件通过git上传到对应的fhv-ui文件夹下，打包文件在docs下
文档案例地址：https://qiulianying.github.io/fhv-ui/#/component/installation
文档中文件内容范例：https://qiulianying.github.io/fhv-ui/img/Koala.jpg
Git地址： https://github.com/qiulianying/fhv-ui
git config --global http.sslVerify false   // 如果遇到ssl问题，解除https的ssl的凭证


依赖组件说明：
1、该组件的项目搭建以及案例引用使用的是最新的vue3.0，写法和构建上和之前vue2.0有一些差别，需要注意一些vue3.0已近进行更新后的地方
2、目前该项目有关组件自动化过程还不足，后续根据情况需要进一步优化


部分组件的搭建方式以及知识点：
1、echarts组件
a：其中使用vue中的属性minxin将主要经常执行的代码进行处理

webpack打包原理以及按需加载实现：



Form Generator 代码生成工具，不过目前只能用于vue + element组件的情况下
https://blog.csdn.net/yehaocheng520/article/details/106326826
https://mrhj.gitee.io/form-generator/#/
